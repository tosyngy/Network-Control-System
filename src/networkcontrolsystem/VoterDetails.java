package networkcontrolsystem;

import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class VoterDetails extends javax.swing.JFrame {
    FormatDate fDate = new FormatDate();
   Date d;
   DefaultTableModel dataSet;
   int j;
    DbConnect dbcon;
    Variables var;
    String query; 
    static  int a=-1;
    static String dat="";
     /**
     * Creates new form LogHistory
     */
    public VoterDetails() {
        initComponents();
        dbcon = new DbConnect();
        var=new Variables();
       fetch2("select name, `limit` ,status from network where status=0");
        jTextField1.setText("0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(null);

        jButton4.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(550, 420, 120, 27);

        jButton5.setText("Connect");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(550, 360, 120, 40);

        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable( int rowIndex, int colIndex){
                return false;
            }
        };
        jTable1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(30, 50, 650, 280);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 21)); // NOI18N
        jLabel9.setText("Network Sharing Center");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(220, 10, 290, 30);
        jPanel1.add(jTextField1);
        jTextField1.setBounds(40, 420, 120, 40);

        jLabel1.setText("No of User on Network: ");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(40, 390, 150, 30);

        jButton10.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jButton10.setText("refresh");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10);
        jButton10.setBounds(310, 390, 110, 40);

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Network Access"));
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 340, 660, 130);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       this.setVisible(false);
      
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
int i=jTable1.getSelectedRow();
if(i<0){
JOptionPane.showMessageDialog(rootPane, "You need to select a network");
return;
}
        if(Integer.parseInt(jTextField1.getText())>=(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString())))
{
JOptionPane.showMessageDialog(rootPane, "Network Limit Reached\n Try another medium");
return;
}

update();
fetch2("select name, `limit` ,status from network where status=0");
 jTextField1.setText("0");    
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
 try {
     j=jTable1.getSelectedRow();
         dbcon.rs = dbcon.st.executeQuery("Select count(id) from log where action like '%connect to "+jTable1.getValueAt(j, 1) +"%' and status=0");
           if (dbcon.rs.next()) { 
             jTextField1.setText(dbcon.rs.getString(1));  
            } 
        } catch (Exception e) {
            e.printStackTrace();
     JOptionPane.showMessageDialog(rootPane, "An Error occur while fecthing information!!!");
    }     
      
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        fetch2("select name, `limit` ,status from network where status=0");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VoterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VoterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VoterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VoterDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VoterDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

     void update() {
         Variables var= new Variables();
        int row=-1;
        row= jTable1.getSelectedRow();
        fetch2("select name, `limit` ,status from network where status=0");
        if(row!=-1){
             try {
                  dbcon.ps = dbcon.con.prepareStatement("update log set status=1 where action like '%" + var.getUsername() + " connect%'");
                dbcon.ps.executeUpdate();
            dbcon.ps = dbcon.con.prepareStatement("update access set status=2 where username='" + var.getUsername() + "'");
                dbcon.ps.executeUpdate();
                 
                log(var.getUsername()+" connect to "+ jTable1.getValueAt(row, 1).toString());
                JOptionPane.showMessageDialog(rootPane, "Connected to "+ jTable1.getValueAt(row, 1).toString());
           
        } catch (Exception e) {
            System.out.println(e);
        }
    }else{
     JOptionPane.showMessageDialog(rootPane, "Select a Network row from\ntable able to connet with");         
        }
    }
      
      void fetch2(String query){
    System.out.println("query "+query);
    j=0;
     dataSet = new DefaultTableModel(); 
     dataSet.addColumn("S/N");
     dataSet.addColumn("Name");
        dataSet.addColumn("Limit");
         dataSet.addColumn("Status");
  try {
         dbcon.rs = dbcon.st.executeQuery(query);
           while (dbcon.rs.next()) { 
               String status="";
               if(dbcon.rs.getInt(3)==0){
               status="available";
               }else{
               status="not available";
               }
               Object[] data = new Object[]{++j,dbcon.rs.getString(1),dbcon.rs.getString(2),
               status};
                dataSet.addRow(data);
            }
           jTable1.setModel(dataSet); 
        } catch (Exception e) {
            e.printStackTrace();
     JOptionPane.showMessageDialog(rootPane, "An Error occur while fecthing information!!!");
    }
          
}  
 
        void log(String event) {
        try {
             GetIP myIp= new GetIP();
            String ip="";
            ip=myIp.getRealIp();
            String mobo="";
            SecureCom sc= new SecureCom();
            if(sc.getMotherboardSN()!=null)
            var.setSysId(sc.getMotherboardSN());
            else
            var.setSysId(sc.getHDDSelNum("C"));
            var.setIP(ip);
            dbcon.ps = dbcon.con.prepareStatement("INSERT INTO `log` (`sysid` ,`ip`  ,`status`,action)VALUES (?,?,?,?) ");
            dbcon.ps.setString(1, var.getSysId());
            dbcon.ps.setString(2, var.getIP());
            dbcon.ps.setString(3, "0");
            dbcon.ps.setString(4, event);
            dbcon.ps.executeUpdate();
        } catch (Exception e) {
        }

    }
      
}
